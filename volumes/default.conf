# server {
#     listen 8088;
#     server_name _;  # Catch-all server name
#     # root /usr/share/nginx/redirect;
#     # index index.html;

#     # Location for static content (default root)
#     location /chatbot {
#         alias /usr/share/nginx/redirect;
#         index index.html;
#     }

#     # Proxy requests to /chatbot to another service running on nginx:8081
#     location / {
#         proxy_pass http://nginx:8081;  # Forward to another server at http://nginx:8081/chatbot

#         # proxy_set_header Host $host;            # Ensure the correct host header is sent
#         # proxy_set_header X-Real-IP $remote_addr; # Forward the real client IP
#         # proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for; # Preserve the forwarding chain
#         # proxy_set_header X-Forwarded-Proto $scheme; # Forward protocol (http or https)
#     }
# }

server {
    listen 8081;
    server_name _;

    location /chatbot {
        alias /usr/share/nginx/html;
        index index.html;
        }

    # Proxy all other requests to localhost:8501
        location / {
        #   proxy_pass http://localhost:8501/;  # Forward all requests to your backend
        proxy_pass http://streamlit:8501;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";	
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        }

    location /nginx_status {
        stub_status on;
        access_log off;
        allow all;
        }

    if ($http_x_forwarded_proto = 'http') {
            return 301 https://$host$request_uri;
    }

    location ~* \.(woff|woff2|ttf|eot)$ {
        add_header Access-Control-Allow-Origin "*";
        add_header Cache-Control "public, max-age=31536000, immutable";
        expires 1y;
        }

        location = /50x.html {
        root /nginx/www;
        }
}

